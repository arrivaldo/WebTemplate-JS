#!/usr/bin/env node
const fs = require('fs');
const path = require('path');

// Function to create the HTML file
const createHTMLFile = () => {
  const htmlContent = `
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Fancy Template</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
<main> 
  <header>
    <h1>Welcome to this Boilerplate</h1>
  </header>

  <section>
    <p>This is a simple web page generated by a custom npm template. It comes with a header, button, and modal interaction.</p>
  </section>

  <div id="modal" class="modal">
    <div class="modal-content">
      <span class="close" id="closeModalBtn">&times;</span>
      <h3>This is a modal! Click outside or on the close button to dismiss.</h3>
    </div>
  </div>
    <button id="openModalBtn" class="btn-primary">Open Modal</button>

  <footer>
    <p>Created with ❤️ by Erick Rodriguez Bárcena</p>
  </footer>
</main>
  <script src="script.js"></script>
</body>
</html>`;
  fs.writeFileSync(path.join(process.cwd(), 'index.html'), htmlContent);
};

// Function to create the CSS file
const createCSSFile = () => {
  const cssContent = `
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Arial', sans-serif;
  background-color: rgb(1, 1, 38);
  color: #333;
  line-height: 1.6;
  text-align: center;
}

header {
  color: white;
}

main {
    display:flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    height: 100vh;
    width: 100%;
}

h1 {
  font-size: 2.5em;
}

h3 {
    color: #000;
}

p {
  margin: 20px 0;
  color: #ffffffe0
}

section {
}

.btn-primary {
  padding: 10px 20px;
  background-color: #007BFF;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1em;
  transition: background-color 0.3s;
}

.btn-primary:hover {
  background-color: #0056b3;
}

footer {
  padding: 7px 15px;
  background-color: #333;
  color: white;
  margin-top: 1.5%;
}

.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0,0,0,0.5);
}

.modal-content {
  background-color: #fff;
  margin: 15% auto;
  padding: 20px;
  border-radius: 10px;
  width: 80%;
  max-width: 500px;
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  cursor: pointer;
}
  

@media screen and (min-width: 320px) and (max-width: 399px) {
 
}
@media screen and (min-width: 400px) and (max-width: 500px) {

}
@media screen and (min-width: 501px) and (max-width: 640px) { 

}  
@media screen and (min-width: 641px) and (max-width: 715px) { 

}
@media screen and (min-width: 716px) and (max-width: 819px) { 

}




`;
  fs.writeFileSync(path.join(process.cwd(), 'style.css'), cssContent);
};

// Function to create the JS file
const createJSFile = () => {
  const jsContent = `
document.addEventListener('DOMContentLoaded', () => {
  const modal = document.getElementById('modal');
  const openModalBtn = document.getElementById('openModalBtn');
  const closeModalBtn = document.getElementById('closeModalBtn');

  // Open modal on button click
  openModalBtn.addEventListener('click', () => {
    modal.style.display = 'block';
  });

  // Close modal on close button click
  closeModalBtn.addEventListener('click', () => {
    modal.style.display = 'none';
  });

  // Close modal if user clicks outside modal
  window.addEventListener('click', (event) => {
    if (event.target === modal) {
      modal.style.display = 'none';
    }
  });
});`;
  fs.writeFileSync(path.join(process.cwd(), 'script.js'), jsContent);
};

// Create the files
createHTMLFile();
createCSSFile();
createJSFile();

console.log('Fancy template created: index.html, style.css, and script.js');
